@model OPDB.Models.UserViewModel

@{
    ViewBag.Title = "Editar";
}

<style>
    .text-box {
        width: 500px;
    }

    .editor-label {
        text-align: left;
    }
</style>

<h2>Editar</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <center>
        <fieldset style="width:500px;">
            <legend>User</legend>

            @Html.HiddenFor(model => model.user.UserID)
            @Html.HiddenFor(model => model.user.CreateDate)
            @Html.HiddenFor(model => model.user.UserStatus)
            @Html.HiddenFor(model => model.userDetail.UserDetailID)
            @Html.HiddenFor(model => model.userDetail.UserID)
            @Html.HiddenFor(model => model.userDetail.CreateDate)

            <div class="editor-label">
                @Html.LabelFor(model => model.user.UserTypeID, "Tipo de Usuario")
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.user.UserTypeID, Model.userTypes, new { @style = "width: 500px;", @id = "userTypes", @onchange = "getUserTypeValue()" })
            </div><br />
            <div class="editor-label">
                @Html.LabelFor(model => model.user.Email, "Correo Electrónico")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.user.Email)
                @Html.ValidationMessageFor(model => model.user.Email)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.user.UserPassword, "Contraseña")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.user.UserPassword)
                @Html.ValidationMessageFor(model => model.user.UserPassword)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.user.PhoneNumber, "Teléfono")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.user.PhoneNumber)
                @Html.ValidationMessageFor(model => model.user.PhoneNumber)
            </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.userDetail.FirstName, "Nombre")
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.userDetail.FirstName)
                    @Html.ValidationMessageFor(model => model.userDetail.FirstName)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.userDetail.MiddleInitial, "Inicial")
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.userDetail.MiddleInitial)
                    @Html.ValidationMessageFor(model => model.userDetail.MiddleInitial)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.userDetail.LastName, "Apellido")
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.userDetail.LastName)
                    @Html.ValidationMessageFor(model => model.userDetail.LastName)
                </div>


                <div class="editor-label">
                    @Html.LabelFor(model => model.userDetail.Gender, "Género")
                </div>
                <div class="editor-field" style="text-align:left !important;">
                    @Html.RadioButtonFor(model => model.userDetail.Gender, "M")<label>Masculino</label>&nbsp;&nbsp;@Html.RadioButtonFor(model => model.userDetail.Gender, "F")<label>Femenino</label>
                    @Html.ValidationMessageFor(model => model.userDetail.Gender)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.userDetail.DateOfBirth, "Fecha de Nacimiento")
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.userDetail.DateOfBirth)
                    @Html.ValidationMessageFor(model => model.userDetail.DateOfBirth)
                </div>
            @*<div class="editor-label">
                @Html.LabelFor(model => model.userDetail.AffiliateType, "Afiliación")
            </div>
            <div class="editor-field" style="text-align:left !important;">
                @Html.DropDownListFor(model => model.userDetail.AffiliateType, Model.AffiliateTypes, new { @style = "width: 500px;", @id = "affiliateTypes", @onchange = "getAffiliateValue()" })
            </div><br />

            <div id="schools">
                <div class="editor-label">
                    @Html.LabelFor(model => model.SchoolID, "Escuela")
                </div>
                <div class="editor-field" style="text-align:left !important;">
                    @Html.DropDownListFor(model => model.SchoolID, Model.Schools, new { @style = "width: 500px;", @id = "school" })
                </div><br />
            </div>

            <div id="outreachEntities">
                <div class="editor-label">
                    @Html.LabelFor(model => model.OutreachEntityDetailID, "Entidad de Alcance")
                </div>
                <div class="editor-field" style="text-align:left !important;">
                    @Html.DropDownListFor(model => model.OutreachEntityDetailID, Model.OutreachEntities, new { @style = "width: 500px;", @id = "outreachEntity" })
                </div><br />
            </div>

            <div id="units">
                <div class="editor-label">
                    @Html.LabelFor(model => model.UnitID, "Unidad")
                </div>
                <div class="editor-field" style="text-align:left !important;">
                    @Html.DropDownListFor(model => model.UnitID, Model.Units, new { @style = "width: 500px;", @id = "unit" })
                </div><br />
            </div>*@

            <div id="faculty">
                <div class="editor-label">
                    @Html.LabelFor(model => model.userDetail.Role, "Rol")
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.userDetail.Role)
                    @Html.ValidationMessageFor(model => model.userDetail.Role)
                </div>
            </div>
            
            <div id="collegeStudent">
                <div class="editor-label">
                    @Html.LabelFor(model => model.userDetail.Major, "Concentración")
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.userDetail.Major)
                    @Html.ValidationMessageFor(model => model.userDetail.Major)
                </div>
            </div>

            <div id="grade">
                <div class="editor-label">
                    @Html.LabelFor(model => model.userDetail.Grade, "Grado")
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.userDetail.Grade)
                    @Html.ValidationMessageFor(model => model.userDetail.Grade)
                </div>
            </div>
           
            <p style="text-align:left;">
                <input type="submit" class="btn" style="float:left !important; width:40% !important; margin-left: 30px !important;" value="Guardar" /> <input type="button" value="Cancelar" class="btn" style="float:right !important; width:40% !important; margin-bottom: 20px !important; margin-right: 30px !important;" onclick="window.history.back()" />
            </p>
        </fieldset>
    </center>
}

<script src="~/Scripts/myScripts.js"></script>

<script>
    $(document).ready(function () {
        getUserTypeValue();
        //getAffiliateValue();
    })
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
