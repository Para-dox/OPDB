@model OPDB.Models.UserViewModel

@{
    ViewBag.Title = "Crear";
}

<h2>Registro</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>User</legend>
        <div class="editor-label">
            @Html.LabelFor(model => model.user.UserTypeID, "UserType")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.user.UserTypeID, Model.userTypes)
            @Html.ValidationMessageFor(model => model.user.UserTypeID)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.userDetail.FirstName, "Nombre")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.userDetail.FirstName)
            @Html.ValidationMessageFor(model => model.userDetail.FirstName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.userDetail.LastName, "Apellido")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.userDetail.LastName)
            @Html.ValidationMessageFor(model => model.userDetail.LastName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.userDetail.MiddleInitial, "Inicial")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.userDetail.MiddleInitial)
            @Html.ValidationMessageFor(model => model.userDetail.MiddleInitial)
        </div>
      <div class="editor-label">
            @Html.LabelFor(model => model.user.Email, "Correo Electronico")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.user.Email)
            @Html.ValidationMessageFor(model => model.user.Email)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.user.UserPassword, "Contraseña")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.user.UserPassword)
            @Html.ValidationMessageFor(model => model.user.UserPassword)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.userDetail.Gender, "Genero")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.userDetail.Gender)
            @Html.ValidationMessageFor(model => model.userDetail.Gender)
        </div>
        @*<div class="editor-label">
            @Html.LabelFor(model => model.UserTypeID, "UserType")
        </div>
        <div class="editor-field">
            @Html.DropDownList("UserTypeID", String.Empty)
            @Html.ValidationMessageFor(model => model.UserTypeID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserPassword)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserPassword)
            @Html.ValidationMessageFor(model => model.UserPassword)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PhoneNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PhoneNumber)
            @Html.ValidationMessageFor(model => model.PhoneNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreateDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreateDate)
            @Html.ValidationMessageFor(model => model.CreateDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UpdateDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UpdateDate)
            @Html.ValidationMessageFor(model => model.UpdateDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DeletionDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DeletionDate)
            @Html.ValidationMessageFor(model => model.DeletionDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserStatus)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserStatus)
            @Html.ValidationMessageFor(model => model.UserStatus)
        </div>*@

        <p>
            <input type="submit" value="Crear" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
