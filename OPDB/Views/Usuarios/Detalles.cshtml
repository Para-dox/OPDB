@model OPDB.Models.UserViewModel

@{
    ViewBag.Title = "Detalles";
}


<style>
    select {
        width: 50px !important;
        padding: 0.2rem !important;
        height: 1.6rem !important;
        margin: 0 !important;
    }

    label {
        cursor: default !important;
        width: 100% !important;
    }

    input[type="search"] {
        padding: 0.2rem;
    }

    th, td {
        text-align: center !important;
    }

    .last, .first, .previous, .next {
        display: none !important;
    }

    a span i:hover {
        color: #008cba;
    }

    .link:hover {
        color: #008cba !important;
    }

    .fa-remove:hover {
        color: #008cba !important;
    }

    .frame {
        position: relative;
        overflow: hidden;
    }

    .dummy {
         padding-top: 100%;
    }

    .image-container {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        display: flex;
        justify-content: center; /* align horizontal */
        align-items: center; /* align vertical */
    }
</style>

<h2>
    @Html.DisplayFor(model => model.UserDetail.FirstName)&nbsp;@if (Model.UserDetail.MiddleInitial != null)
    {@Html.DisplayFor(model => model.UserDetail.MiddleInitial)<r>&nbsp;</r>}@Html.DisplayFor(model => model.UserDetail.LastName)
</h2>
<div class="panel large-12 columns callout">
    <div class="large-5 columns">
        <div class="display-label">
            @Html.LabelFor(model => model.User.UserType.UserType1, "Tipo de Usuario")
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.User.UserType.UserType1)
        </div>
        <br />
        <div class="display-label">
            @Html.LabelFor(model => model.User.Email, "Correo Electrónico")
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.User.Email)
        </div>
        <br />
        <div class="display-label">
            @Html.LabelFor(model => model.User.PhoneNumber, "Número Telefónico")
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.User.PhoneNumber)
        </div><br />
        @if (Model.UserDetail.DateOfBirth != null && Model.UserDetail.DateOfBirth != new DateTime())
        {
            <div class="display-label">
                @Html.LabelFor(model => model.UserDetail.DateOfBirth, "Fecha de Nacimiento")
            </div>
            <div class="display-field">
                @Model.UserDetail.DateOfBirth.Value.ToString("dd/MM/yyyy")
            </div>
            <br />
        }
        @if (Model.UserDetail.Major != null)
        {
            <div class="display-label">
                @Html.LabelFor(model => model.UserDetail.Major, "Concentración")
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.UserDetail.Major)
            </div>
            <br />
        }
        else if (Model.UserDetail.Role != null)
        {
            <div class="display-label">
                @Html.LabelFor(model => model.UserDetail.Role, "Rol")
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.UserDetail.Role)
            </div>
            <br />
        }
        else if (Model.UserDetail.Grade != null)
        {
            <div class="display-label">
                @Html.LabelFor(model => model.UserDetail.Grade, "Grado")
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.UserDetail.Grade)
            </div>
            <br />
        }
        <br />
        <a title="Regresar" onclick="window.history.back()"><span class="fa-stack fa-lg"><i class="fa fa-square fa-stack-2x" style="color:#222222;"></i><i class="fa fa-arrow-left fa-stack-1x fa-inverse"></i></span></a>

        @if (User.Identity.IsAuthenticated)
        {
            if (Int32.Parse(User.Identity.Name.Split(',')[0]) == Model.User.UserID || Int32.Parse(User.Identity.Name.Split(',')[1]) == 1)
            {
                <a title="Editar Usuario" href="@Url.Action("Editar", "Usuarios", new { source = "Detalles", id = Model.User.UserID })"><span class="fa-stack fa-lg"><i class="fa fa-square fa-stack-2x" style="color:#222222;"></i><i class="fa fa-pencil fa-stack-1x fa-inverse"></i></span></a>
            }
        }
    </div>

    @if (User.Identity.IsAuthenticated)
    {
            <div class="large-7 columns">
            <h3>Mensajes</h3>
                <table id="userNotes">
                    <thead>
                        <tr>
                        <th style="width:20%;">Leído</th>
                        <th>Enviado Por</th>
                        <th>Mensaje</th>
                            <th style="width:10%;"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var note in Model.Notes)
                        {
                            <tr>
                            <td>
                                @if (note.UserNote.Read)
                                {
                                    <i class="fa fa-check" title="Leído"></i>
                                }
                                else
                                {
                                    <i class="fa fa-exclamation" title="No Leído"></i>
                                }
                            </td>
                            <td>@note.Sender</td>
                            <td style="text-align:left !important;"><a href="#" title="Ver Mensaje" data-validation="false" style="color:#222222;" data-title="Mensaje" onclick="DisplayModal(this)" data-toggle="modal" data-url="@Url.Action("VerNota", "Usuarios", new { id = note.UserNote.UserNoteID })" class="modal_ajax_btn link">@String.Concat(note.UserNote.Note.Substring(0, note.UserNote.Note.Length > 100 ? 100 : note.UserNote.Note.Length), " ...")</a></td>
                                <td>
                                @if ((Int32.Parse(User.Identity.Name.Split(',')[0]) == note.UserNote.UserID || Int32.Parse(User.Identity.Name.Split(',')[1]) == 1) && !note.UserNote.Read)
                                {
                                    <a href="#" title="Editar" style="color:#222222;" data-title="Editar Nota" onclick="DisplayModal(this)" data-toggle="modal" data-url="@Url.Action("EditarNota", "Usuarios", new { id = note.UserNote.UserNoteID })" class="modal_ajax_btn link"><i class="fa fa-pencil"></i></a>
                                    <i title="Remover" style="cursor:pointer;" class="fa fa-remove" onclick="removeRecord(this, 'userNotes')" data-url="@Url.Action("RemoverNota", "Usuarios", new { id = note.UserNote.UserNoteID })"></i>}
                                else if (Int32.Parse(User.Identity.Name.Split(',')[0]) == note.UserNote.SubjectID)
                                {
                                    <a href="#" title="Responder" style="color:#222222;" data-title="Respuesta" onclick="DisplayModal(this)" data-toggle="modal" data-url="@Url.Action("CrearNota", "Usuarios", new { id = note.UserNote.UserID })" class="modal_ajax_btn link"><i class="fa fa-mail-reply"></i></a>
                                }

                                </td>
                            </tr>
                        }
                    </tbody>

                </table><br />
            @if (Int32.Parse(User.Identity.Name.ToString().Split(',')[0]) != Model.User.UserID && Boolean.Parse(User.Identity.Name.Split(',')[2]))
                {
                <a href="#" title="Dejar Mensaje" class="modal_ajax_btn" data-title="Mensaje Nuevo" onclick="DisplayModal(this)" data-toggle="modal" data-url="@Url.Action("CrearNota", "Usuarios", new { id = Model.User.UserID })"><input type="button" class="btn" value="Dejar Mensaje" /></a>}
        </div>

    }
    else if (Model.User.UserTypeID == 1)
    {
        <div class="large-6 columns frame"><div class="dummy"></div><div class="image-container"><img src="@Url.Content("~/Images/man77.svg")" height="297" width="297" /></div></div>
    }
    else if (Model.User.UserTypeID == 2)
    {
        <div class="large-6 columns frame"><div class="dummy"></div><div class="image-container"><img src="@Url.Content("~/Images/student13.svg")" height="200" width="200" /></div></div>
    }
    else if (Model.User.UserTypeID == 4)
    {
        <div class="large-6 columns frame"><div class="dummy"></div><div class="image-container"><img src="@Url.Content("~/Images/lecture2.svg")" height="297" width="297" /></div></div>
    }
    else if (Model.User.UserTypeID == 6)
    {
        <div class="large-6 columns frame"><div class="dummy"></div><div class="image-container"><img src="@Url.Content("~/Images/grammar.svg")" height="297" width="297" /></div></div>
    }
    else if (Model.User.UserTypeID == 7)
    {
        <div class="large-6 columns frame"><div class="dummy"></div><div class="image-container"><img src="@Url.Content("~/Images/student35.svg")" height="297" width="297" style="align-items:center !important;" /></div></div>
    }
    else if (Model.User.UserTypeID == 8)
    {
        <div class="large-6 columns frame"><div class="dummy"></div><div class="image-container"><img src="@Url.Content("~/Images/family1.svg")" height="297" width="297" /></div></div>
    }
</div>

<script src="~/Scripts/myScripts.js"></script>
<script>
    $(document).ready(function () {

        $('#userNotes').DataTable({
            "sDom": '<"top"f>t<"bottom"pr><"clear">',
            "sPaginationType": "full_numbers",
            "bProcessing": false,
            "iDisplayLength": 5,
            "columnDefs": [
                {
                    "orderable": false,
                    "targets": 3
                }
            ],
            "oLanguage": {
                "sEmptyTable": "No se ha dejado ninguna nota",
                "sZeroRecords": "No se ha encontrado ningún registro",
                "sSearch": "Buscar:"
            }
        });
    });

</script>