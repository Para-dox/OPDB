@model OPDB.Models.UserViewModel

@{
    ViewBag.Title = "Crear Usuario";
}
<style>
    .text-box {
        width: 500px;
    }

    .editor-label {
        text-align: left;
    }
</style>

<h2>Nuevo Usuario</h2>

@using (Html.BeginForm())
{
    <center>
        <fieldset style="width:500px;">
            <label>Todos los campos con (*) son requeridos</label><br />
            @Html.ValidationSummary(true)
            <div class="editor-label">
                @Html.LabelFor(model => model.User.UserTypeID, "Tipo de Usuario *")
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.User.UserTypeID, Model.UserTypes, new { @style = "width: 500px !important;", @id = "userType", @onchange = "getValue()" })
            </div><br />
            <div class="editor-label">
                @Html.LabelFor(model => model.User.Email, "Correo Electrónico *")
            </div>
            <div>
                @Html.ValidationMessage("User_Email_Exists")
                @Html.ValidationMessageFor(model => model.User.Email)
                @Html.EditorFor(model => model.User.Email, new { @style = "width: 500px !important;" })
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.User.UserPassword, "Contraseña *")<i style="float:right; cursor:pointer;" class="fa fa-question-circle" title="Su contraseña debe contener: de 8 a 10 caracteres, al menos un digito, al menos un caracter alfabetico y no debe contener caracteres especiales."></i>
            </div>
            <div class="editor-field">
                @Html.ValidationMessageFor(model => model.User.UserPassword)
                @Html.EditorFor(model => model.User.UserPassword, new { @style = "width: 500px !important;" })
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.ConfirmPassword, "Confirmar Contraseña *")
            </div>
            <div class="editor-field">
                @Html.ValidationMessage("User_Password_NoMatch")
                @Html.PasswordFor(model => model.ConfirmPassword, new { @style = "width: 500px !important;" })
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.UserDetail.FirstName, "Nombre *")
            </div>
            <div class="editor-field">
                @Html.ValidationMessage("UserDetail_FirstName_Required")
                @Html.ValidationMessage("UserDetail_FirstName_Invalid")
                @Html.ValidationMessage("UserDetail_FirstName_LengthExceeded")
                @Html.EditorFor(model => model.UserDetail.FirstName, new { @style = "width: 500px !important;" })
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.UserDetail.LastName, "Apellido *")
            </div>
            <div class="editor-field">
                @Html.ValidationMessage("UserDetail_LastName_Required")
                @Html.ValidationMessage("UserDetail_LastName_Invalid")
                @Html.ValidationMessage("UserDetail_LastName_LengthExceeded")
                @Html.EditorFor(model => model.UserDetail.LastName, new { @style = "width: 500px !important;" })
            </div>
            <div class="editor-label">
                @Html.ValidationMessage("UserDetail_MiddleInitial_Invalid")
                @Html.LabelFor(model => model.UserDetail.MiddleInitial, "Inicial")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.UserDetail.MiddleInitial, new { @style = "width: 500px !important;" })
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.UserDetail.Gender, "Género *")
            </div>
            <div class="editor-field" style="text-align:left !important;">
                @Html.ValidationMessage("UserDetail_Gender_Required")<br />
                @Html.RadioButtonFor(model => model.UserDetail.Gender, "M")<label>Masculino</label>&nbsp;&nbsp;@Html.RadioButtonFor(model => model.UserDetail.Gender, "F")<label>Femenino</label>
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.BirthDate, "Fecha de Nacimiento")
            </div>
            <div class="editor-field">
                @Html.ValidationMessage("UserDetail_DateOfBirth_Invalid")
                @Html.TextBoxFor(model => model.BirthDate, new { @placeholder = "dd/MM/yyyy", @style = "width:500px;"})
            </div>
            <div id="faculty">
                <div class="editor-label">
                    @Html.LabelFor(model => model.UserDetail.Role, "Rol")
                </div>
                <div class="editor-field">
                    @Html.ValidationMessage("UserDetail_Role_Invalid")
                    @Html.ValidationMessage("UserDetail_Role_LengthExceeded")
                    @Html.EditorFor(model => model.UserDetail.Role)
                </div>
            </div>

            <div id="collegeStudent">
                <div class="editor-label">
                    @Html.LabelFor(model => model.UserDetail.Major, "Concentración")
                </div>
                <div class="editor-field">
                    @Html.ValidationMessage("UserDetail_Major_Invalid")
                    @Html.ValidationMessage("UserDetail_Major_LengthExceeded")
                    @Html.EditorFor(model => model.UserDetail.Major)
                </div>
            </div>

            <div id="grade">
                <div class="editor-label">
                    @Html.LabelFor(model => model.UserDetail.Grade, "Grado")
                </div>
                <div class="editor-field">
                    @Html.ValidationMessage("UserDetail_Grade_Invalid")
                    @Html.ValidationMessage("UserDetail_Grade_LengthExceeded")
                    @Html.EditorFor(model => model.UserDetail.Grade)
                </div>
            </div>

            <p style="text-align:left;">
                <input type="submit" class="btn" style="float:left !important; width:40% !important; margin-left: 30px !important;" value="Crear" /> <input type="button" value="Cancelar" class="btn" style="float:right !important; width:40% !important; margin-bottom: 20px !important; margin-right: 30px !important;" onclick="window.history.back()" />
            </p>
        </fieldset>
    </center>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")



}

<script src="~/Scripts/myScripts.js"></script>
<script type="text/javascript">

    $(document).ready(function () {
        getValue();
    })
  </script>