@model OPDB.Models.UserViewModel

@{
    ViewBag.Title = "Detalles";
}

<style>
    select {
        width: 50px !important;
        padding: 0.2rem !important;
        height: 1.6rem !important;
        margin: 0 !important;
    }

    label {
        cursor: default !important;
        width: 100% !important;
    }

    input[type="search"] {
        padding: 0.2rem;
    }

    th, td {
        text-align: center !important;
    }

    .last, .first, .previous, .next {
        display: none !important;
    }

    /*.panel.callout a:not(.button) {
      color: #222222; }*/

    a span i:hover {
        color: #008cba;
    }

    .link:hover {
        color: #008cba !important;
    }

    .fa-remove:hover {
        color: #008cba !important;
    }
</style>

<h2> @Html.DisplayFor(model => model.outreachEntity.OutreachEntityName)</h2>
<div class="panel callout columns" >
    <div class="large-5 columns">
    <div class="display-label">
            @Html.LabelFor(model => model.outreachEntity.OutreachEntityType.OutreachEntityType1, "Tipo de Organización")
    </div>
    <div class="display-field">
            @Html.DisplayFor(model => model.outreachEntity.OutreachEntityType.OutreachEntityType1)
    </div>
        <br />

    <div class="display-label">
            @Html.LabelFor(model => model.outreachEntity.OutreachEntityName, "Nombre de la Organización")
    </div>

    <div class="display-field">
            @Html.DisplayFor(model => model.outreachEntity.OutreachEntityName)
    </div>
        <br />
        <div class="display-label">
            @Html.LabelFor(model => model.user.Email, "Correo Eléctronico")
        </div>

        <div class="display-field">
            @Html.DisplayFor(model => model.user.Email)
        </div>
        <br />
    @if (Model.user.PhoneNumber != null && Model.user.PhoneNumber != "") 
    { 
        <div class="display-label">
                @Html.LabelFor(model => model.user.PhoneNumber, "Número Telefónico")
        </div>

        <div class="display-field">
                @Html.DisplayFor(model => model.user.PhoneNumber)
        </div>  
            <br />
    }
    <div class="display-label">
            @Html.LabelFor(model => model.outreachEntity.Mission, "Misión")
    </div>
    <div class="display-field">
            @Html.DisplayFor(model => model.outreachEntity.Mission)
    </div>
        <br />

    <div class="display-label">
            @Html.LabelFor(model => model.outreachEntity.Vision, "Visión")
    </div>
    <div class="display-field">
            @Html.DisplayFor(model => model.outreachEntity.Vision)
    </div>
        <br />

    <div class="display-label">
            @Html.LabelFor(model => model.outreachEntity.Objectives, "Objetivos")
    </div>
    <div class="display-field">
            @Html.DisplayFor(model => model.outreachEntity.Objectives)
    </div>
        <br />
    @if (Model.outreachEntity.Location != null && Model.outreachEntity.Location != "") 
    { 
        <div class="display-label">
                @Html.LabelFor(model => model.outreachEntity.Location, "Localización")
        </div>
        <div class="display-field">
                @Html.DisplayFor(model => model.outreachEntity.Location)
        </div>
    }
        <p>
            <br />
            <a title="Regresar" onclick="window.history.back()"><span class="fa-stack fa-lg"><i class="fa fa-square fa-stack-2x" style="color:#222222;"></i><i class="fa fa-arrow-left fa-stack-1x fa-inverse"></i></span></a>

        @if (Request.IsAuthenticated)
        {
            if (Int32.Parse(User.Identity.Name.Substring(0, User.Identity.Name.IndexOf("u")).Trim()) == Model.outreachEntity.UserID)
            {
            <a title="Editar Entidad de Alcance" href="@Url.Action("Editar", "Alcance", new { id = Model.outreachEntity.UserID })"><span class="fa-stack fa-lg"><i class="fa fa-square fa-stack-2x" style="color:#222222;"></i><i class="fa fa-pencil fa-stack-1x fa-inverse"></i></span></a>
            <a title="Añadir Actividad" href="@Url.Action("Crear", "Actividades", new { id = Model.outreachEntity.UserID })"><span class="fa-stack fa-lg"><i class="fa fa-square fa-stack-2x" style="color:#222222;"></i><i class="fa fa-plus fa-stack-1x fa-inverse"></i></span></a>
            }
        }
        </p>
    </div>

    @if (Request.IsAuthenticated)
    {
        if (Int32.Parse(User.Identity.Name.Substring(0, User.Identity.Name.IndexOf("u")).Trim()) == Model.outreachEntity.UserID)
        {
    <div class="large-7 columns">
        <h3>Notas</h3>
        <table id="outreachNotes">
            <thead>
                <tr>
                    <th>Tipo</th>
                    <th style="width:70%;">Nota</th>
                    <th style="width:10%;"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var note in Model.Notes)
                {
                    <tr>
                        <td>@note.NoteType.NoteType1</td>
                        <td><a href="#" title="Ver Nota" data-validation="false" data-title="Detalles" onclick="DisplayModal(this)" data-toggle="modal" data-url="@Url.Action("VerNota", "Alcance", new { id = note.UserNoteID })" class="modal_ajax_btn">@String.Concat(note.Note.Substring(0, note.Note.Length > 100 ? 100 : note.Note.Length), "...")</a></td>
                        <td>
                                <a href="#" title="Editar" data-title="Editar Nota" onclick="DisplayModal(this)" data-toggle="modal" data-url="@Url.Action("EditarNota", "Alcance", new { id = note.UserNoteID })" class="modal_ajax_btn"><i class="fa fa-pencil"></i></a>
                                <i title="Remover" style="cursor:pointer;" class="fa fa-remove" onclick="removeRecord(this, 'outreachNotes')" data-url="@Url.Action("RemoverNota", "Alcance", new { id = note.UserNoteID })"></i>                               

                        </td>
                    </tr>
                }
            </tbody>

        </table><br />
        <a href="#" title="Añadir Nota" class="modal_ajax_btn" data-title="Nueva Nota" onclick="DisplayModal(this)" data-toggle="modal" data-url="@Url.Action("CrearNota", "Alcance", new { id = Model.outreachEntity.UserID })"><input type="button" value="Añadir Nota" class="btn" /></a>
    </div>
    }
    }

</div>

<div class="large-12 columns panel callout">
    <h3>Actividades</h3>
    <table id="activities" style="border:none;">
        <thead hidden>
            <tr>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var activity in Model.Activities)
            {
                <tr style="background-color: #ecfaff !important">
                 <td style="text-align: left !important;">
                    @Html.ActionLink(activity.Title, "Detalles", "Actividades", new { id = activity.ActivityID }, null)<br />
                    <span>Propósito: </span> @activity.Purpose<br />
                    <div>@if (activity.ActivityDate != new DateTime())
                    { <span>Fecha: </span> @activity.ActivityDate.Value.ToString("dd/MM/yyyy") } @if (activity.ActivityTime != "")
                    {<span>Hora: </span> @activity.ActivityTime}</div>
                 </td>
                </tr>
            }
        </tbody>

    </table>
</div>

<script src="~/Scripts/myScripts.js"></script>
<script>
    $(document).ready(function () {

        $('#outreachNotes').DataTable({
            "sDom": '<"top"lf>t<"bottom"pr><"clear">',
            "sPaginationType": "full_numbers",
            "bProcessing": false,
            "iDisplayLength": 12,
            "columnDefs": [
                {
                    "orderable": false,
                    "targets": 2
                }
            ],
            "oLanguage": {
                "sEmptyTable": "No se ha dejado ninguna nota",
                "sZeroRecords": "No se ha encontrado ningún registro",
                "sSearch": "Buscar:"
            }
        });

        $('#activities').DataTable({
            "sDom": '<"top">t<"bottom"pr><"clear">',
            "sPaginationType": "full_numbers",
            "bProcessing": false,
            "iDisplayLength": 10,
            "oLanguage": {
                "sEmptyTable": "No se ha creado ninguna actividad",
                "sZeroRecords": "No se ha encontrado ningún registro",
                "sSearch": "Buscar:"
            }
        });
    });

</script>
