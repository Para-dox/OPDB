@model OPDB.Models.UserViewModel

@{
    ViewBag.Title = "Detalles";
}

<style>
    select {
        width: 50px !important;
        padding: 0.2rem !important;
        height: 1.6rem !important;
        margin: 0 !important;
    }

    label {
        cursor: default !important;
        width: 100% !important;
    }

    input[type="search"] {
        padding: 0.2rem;
    }

    th, td {
        text-align: center !important;
    }

    .last, .first, .previous, .next {
        display: none !important;
    }

    a span i:hover {
        color: #007A0B;
    }

    .link:hover {
        color: #007A0B !important;
    }

    .fa-remove:hover {
        color: #007A0B !important;
    }

    .frame {
        position: relative;
        overflow: hidden;
    }

    .dummy {
        padding-top: 100%;
    }

    .image-container {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        display: flex;
        justify-content: center; /* align horizontal */
        align-items: center; /* align vertical */
    }
</style>

<h2> @Html.DisplayFor(model => model.OutreachEntity.OutreachEntityName)</h2>
<div class="panel callout columns">
    <div class="large-5 columns">
        <div class="display-label">
            @Html.LabelFor(model => model.OutreachEntity.OutreachEntityType.OutreachEntityType1, "Tipo de Organización")
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.OutreachEntity.OutreachEntityType.OutreachEntityType1)
        </div>
        <br />

        <div class="display-label">
            @Html.LabelFor(model => model.OutreachEntity.OutreachEntityName, "Nombre de la Organización")
        </div>

        <div class="display-field">
            @Html.DisplayFor(model => model.OutreachEntity.OutreachEntityName)
        </div>
        <br />
        <div class="display-label">
            @Html.LabelFor(model => model.User.Email, "Correo Eléctronico")
        </div>

        <div class="display-field">
            @Html.DisplayFor(model => model.User.Email)
        </div>
        <br />
        @if (Model.User.PhoneNumber != null && Model.User.PhoneNumber != "")
        {
            <div class="display-label">
                @Html.LabelFor(model => model.User.PhoneNumber, "Número Telefónico")
            </div>

            <div class="display-field">
                @Html.DisplayFor(model => model.User.PhoneNumber)
            </div>
            <br />
        }
        <div class="display-label">
            @Html.LabelFor(model => model.OutreachEntity.Mission, "Misión")
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.OutreachEntity.Mission)
        </div>
        <br />

        <div class="display-label">
            @Html.LabelFor(model => model.OutreachEntity.Vision, "Visión")
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.OutreachEntity.Vision)
        </div>
        <br />

        <div class="display-label">
            @Html.LabelFor(model => model.OutreachEntity.Objectives, "Objetivos")
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.OutreachEntity.Objectives)
        </div>
        <br />
        @if (Model.OutreachEntity.Location != null && Model.OutreachEntity.Location != "")
        {
            <div class="display-label">
                @Html.LabelFor(model => model.OutreachEntity.Location, "Localización")
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.OutreachEntity.Location)
            </div>
        }
        <p>
            <br />
            <span id="admin">
                <a title="Regresar" onclick="location.href='@Url.Action("Administracion", "Home")'"><span class="fa-stack fa-lg"><i class="fa fa-square fa-stack-2x" style="color:#222222;"></i><i class="fa fa-arrow-left fa-stack-1x fa-inverse"></i></span></a>
            </span>
            <span id="list">
                <a title="Regresar" onclick="location.href='@Url.Action("Lista", "Alcance")'"><span class="fa-stack fa-lg"><i class="fa fa-square fa-stack-2x" style="color:#222222;"></i><i class="fa fa-arrow-left fa-stack-1x fa-inverse"></i></span></a>
            </span>
            @if (Request.IsAuthenticated)
            {
                if ((Int32.Parse(User.Identity.Name.ToString().Split(',')[0]) == Model.OutreachEntity.UserID && Boolean.Parse(User.Identity.Name.ToString().Split(',')[2])) || Int32.Parse(User.Identity.Name.ToString().Split(',')[1]) == 1)
                {
                    <a title="Editar Entidad de Alcance" onclick="sessionStorage.setItem('Route', 'details');" href="@Url.Action("Editar", "Alcance", new { source = "Detalles", id = Model.OutreachEntity.UserID })"><span class="fa-stack fa-lg"><i class="fa fa-square fa-stack-2x" style="color:#222222;"></i><i class="fa fa-pencil fa-stack-1x fa-inverse"></i></span></a>
                    <a title="Añadir Actividad" href="@Url.Action("Crear", "Actividades", new { id = Model.OutreachEntity.UserID })"><span class="fa-stack fa-lg"><i class="fa fa-square fa-stack-2x" style="color:#222222;"></i><i class="fa fa-plus fa-stack-1x fa-inverse"></i></span></a>
                }
            }
        </p>
    </div>

    @if (Request.IsAuthenticated) // only logged users can see notes
    {
        if (Int32.Parse(User.Identity.Name.Split(',')[1]) <= 3) //only admins, mods, and outreach entities can view notes
        {
            <div class="large-7 columns">
                <h3>Mensajes</h3>
                <table id="outreachNotes">
                    <thead>
                        <tr>
                            <th>Leído</th>
                            <th>Enviado Por</th>
                            <th>Asunto</th>
                            <th></th>
                            <th style="width:10%;"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var note in Model.Notes)
                        {
                            <tr>

                                <td>
                                    @if (note.UserNote.IsRead)
                                    {
                                        <i class="fa fa-check" title="Leído"></i>
                                    }
                                    else
                                    {
                                        <i class="fa fa-exclamation" title="No Leído"></i>
                                    }
                                </td>
                                <td>@note.Sender</td>
                                <td style="text-align:left !important;"><a href="#" title="Ver Mensaje" data-validation="false" style="color:black" data-title="Mensaje" onclick="DisplayModal(this)" data-toggle="modal" data-url="@Url.Action("VerNota", "Alcance", new { id = note.UserNote.UserNoteID })" class="modal_ajax_btn link">@note.UserNote.Subject</a></td>
                                <td>@note.UserNote.Note</td>
                                <td>
                                    @if ((Int32.Parse(User.Identity.Name.Split(',')[0]) == note.UserNote.UserID || Int32.Parse(User.Identity.Name.Split(',')[1]) == 1) && !note.UserNote.IsRead)
                                    {
                                        <a href="#" title="Editar" style="color:black;" data-title="Editar Mensaje" onclick="DisplayModal(this)" data-toggle="modal" data-url="@Url.Action("EditarNota", "Alcance", new { id = note.UserNote.UserNoteID })" class="modal_ajax_btn link"><i class="fa fa-pencil"></i></a>
                                        <i title="Remover" style="cursor:pointer;" class="fa fa-remove" onclick="removeRecord(this, 'outreachNotes')" data-url="@Url.Action("RemoverNota", "Alcance", new { id = note.UserNote.UserNoteID })"></i>      }
                                    else if (Int32.Parse(User.Identity.Name.Split(',')[0]) == note.UserNote.SubjectID)
                                    {
                                        <a href="#" title="Responder" style="color:black;" data-title="Respuesta" onclick="DisplayModal(this)" data-toggle="modal" data-url="@Url.Action("CrearNota", "Alcance", new { id = note.UserNote.UserID })" class="modal_ajax_btn link"><i class="fa fa-mail-reply"></i></a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>

                </table><br />
                @if (Int32.Parse(User.Identity.Name.ToString().Split(',')[0]) != Model.User.UserID && Boolean.Parse(User.Identity.Name.Split(',')[2]))
                {
                    <a href="#" title="Dejar Mensaje" class="modal_ajax_btn" data-title="Mensaje Nuevo" onclick="DisplayModal(this)" data-toggle="modal" data-url="@Url.Action("CrearNota", "Alcance", new { id = Model.OutreachEntity.UserID })"><input type="button" value="Dejar Mensaje" class="btn" /></a>}
            </div>

        }
    }
    else
    {
        <div class="large-6 columns frame"><div class="dummy"></div><div class="image-container"><img src="@Url.Content("~/Images/handshake1.svg")" height="297" width="297" /></div></div>
    }


</div>

<div class="large-12 columns panel callout">
    <h3>Actividades</h3>
    <table id="activities" style="border:none;">
        <thead hidden>
            <tr>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var activity in Model.Activities)
            {
                <tr style="background-color: #DBFFDB !important;">
                    <td style="text-align: left !important;">
                        @Html.ActionLink(activity.Title, "Detalles", "Actividades", new { id = activity.ActivityID }, new { @onclick = "sessionStorage.setItem('Route', 'details');" })<br />
                        <r>Propósito: </r> @activity.Purpose<br />
                        <div>
                            @if (activity.ActivityDate != new DateTime())
                            { <r>Fecha: </r> @activity.ActivityDate.Value.ToString("dd/MM/yyyy") } @if (activity.ActivityTime != "")
                            {<r>Hora: </r> @activity.ActivityTime}
                        </div>
                    </td>
                </tr>
            }
        </tbody>

    </table>
</div>

<script src="~/Scripts/myScripts.js"></script>
<script>
    $(document).ready(function () {

        displayReturn();
            

        $('#outreachNotes').DataTable({
            "sDom": '<"top"f>t<"bottom"pr><"clear">',
            "sPaginationType": "full_numbers",
            "bProcessing": false,
            "iDisplayLength": 12,
            "columnDefs": [
                {
                    "orderable": false,
                    "targets": 4
                },
                {
                    "visible": false,
                    "targets": 3
                }
            ],
            "oLanguage": {
                "sEmptyTable": "No se ha dejado ninguna nota",
                "sZeroRecords": "No se ha encontrado ningún registro",
                "sSearch": "Buscar:"
            }
        });

        $('#activities').DataTable({
            "sDom": '<"top">t<"bottom"pr><"clear">',
            "sPaginationType": "full_numbers",
            "bProcessing": false,
            "iDisplayLength": 10,
            "oLanguage": {
                "sEmptyTable": "No se ha creado ninguna actividad",
                "sZeroRecords": "No se ha encontrado ningún registro",
                "sSearch": "Buscar:"
            }
        });
    });

</script>
