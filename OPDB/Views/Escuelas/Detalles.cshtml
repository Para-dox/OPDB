@model OPDB.Models.SchoolViewModel
@{
    ViewBag.Title = "Detalles";
}

<style>
 select {
        width: 50px !important;
        padding: 0.2rem !important;
        height: 1.6rem !important;
        margin: 0 !important;
    }

    label {
        width: 100% !important;
    }

    input[type="search"] {
        padding: 0.2rem;
    }

    th, td {
        text-align: center !important;
    }

     .last, .first, .previous, .next{
        display: none !important;
    }

    a span i:hover{
           color: #008cba;
      }

      .link:hover{
          color: #008cba !important;
      }

      .fa-remove:hover{
          color: #008cba !important;
      }

</style>

<h2 style="text-align:center;">@Model.School.SchoolName</h2>
<br />
<div class="panel callout columns">
    <div class="large-5 columns">
        <h3>Información</h3>
        <div class="display-label">
            @Html.LabelFor(model => model.School.SchoolSequenceNumber, "Número de Identificación")
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.School.SchoolSequenceNumber)
        </div>
        <br />
        <div class="display-label">
            @Html.LabelFor(model => model.School.Address, "Dirección")
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.School.Address)
        </div>
        <br />
        <div class="display-label">
            @Html.LabelFor(model => model.School.Town, "Pueblo")
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.School.Town)
        </div>
        <br />
        <div class="display-label">
            @Html.LabelFor(model => model.School.PhoneNumber, "Número Telefónico")
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.School.PhoneNumber)
        </div>
        <br />

            <p>
                <a title="Regresar" onclick="window.history.back()"><span class="fa-stack fa-lg"><i class="fa fa-square fa-stack-2x" style="color:#222222;"></i><i class="fa fa-arrow-left fa-stack-1x fa-inverse"></i></span></a>
            @if (User.Identity.IsAuthenticated)
            {
                if (Int32.Parse(User.Identity.Name.Split(',')[1]) == 1)
                {
                    <a href="#" title="Editar" data-title="Editar Escuela" onclick="DisplayModal(this)" data-toggle="modal" data-url="@Url.Action("PopUpEditar", "Escuelas", new { id = Model.School.SchoolID })" class="modal_ajax_btn"><span class="fa-stack fa-lg"><i class="fa fa-square fa-stack-2x" style="color:#222222;"></i><i class="fa fa-pencil fa-stack-1x fa-inverse"></i></span></a>   }
            }             
            </p>       
    </div>

@if (Request.IsAuthenticated)
{
    if ((Int32.Parse(User.Identity.Name.ToString().Split(',')[1]) == 3 && Boolean.Parse(User.Identity.Name.ToString().Split(',')[2])) || Int32.Parse(User.Identity.Name.ToString().Split(',')[1]) == 1)
    {
    <div class="large-7 columns">
        <h3>Notas</h3>
        <table id="schoolNotes">
            <thead>
                <tr>
                    <th>Tipo</th>
                    <th style="width:70%;">Nota</th>
                    <th style="width:10%;"></th>
                </tr> 
            </thead>
            <tbody>
                @foreach (var note in Model.Notes)
                {
                    <tr>
                        <td>@note.NoteType.NoteType1</td>
                        <td><a href="#" title="Ver Nota" data-validation="false" data-title="Detalles" onclick="DisplayModal(this)" data-toggle="modal" data-url="@Url.Action("VerNota", "Escuelas", new { id = note.SchoolNoteID })" class="modal_ajax_btn link">@String.Concat(note.Note.Substring(0, note.Note.Length > 100 ? 100 : note.Note.Length), " ...")</a></td>
                        <td>
                            <a href="#" title="Editar" data-title="Editar Nota" onclick="DisplayModal(this)" data-toggle="modal" data-url="@Url.Action("EditarNota", "Escuelas", new { id = note.SchoolNoteID })" class="modal_ajax_btn link"><i class="fa fa-pencil"></i></a> 
                            <i title="Remover" style="cursor:pointer;" class="fa fa-remove" onclick="removeRecord(this, 'schoolNotes')" data-url="@Url.Action("RemoverNota", "Escuelas", new { id = note.SchoolNoteID })"></i>
  
                        </td>
                    </tr>
                }
            </tbody>          
        </table>
@if (Int32.Parse(User.Identity.Name.ToString().Split(',')[0]) == 3 && Boolean.Parse(User.Identity.Name.ToString().Split(',')[2])) {
        <a href="#" title="Añadir Nota" class="modal_ajax_btn" data-title="Nueva Nota" onclick="DisplayModal(this)" data-toggle="modal" data-url="@Url.Action("CrearNota", "Escuelas", new { id = Model.School.SchoolID })"><input type="button" class="btn" value="Añadir Nota" /></a>}
    </div>}
}
</div>
   
                    
<script src="~/Scripts/myScripts.js"></script>
<script>
    $(document).ready(function () {

        $('#schoolNotes').DataTable({
            "sDom": '<"top"f>t<"bottom"pr><"clear">',
            "sPaginationType": "full_numbers",
            "bProcessing": false,
            "iDisplayLength": 5,
            "aaSorting":[[1, "asc"]],
            "columnDefs": [
                {
                    "orderable": false,
                    "targets": 2
                }
            ],
            "oLanguage": { "sEmptyTable": "No se ha dejado ninguna nota",
                "sZeroRecords": "No se ha encontrado ningún registro",
                "sSearch": "Buscar:"}
        });
    });

</script>
